<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="TunnelVisionLabs.ReferenceAssemblyAnnotator.AnnotatorBuildTask" AssemblyFile="$(ReferenceAssemblyAnnotatorBuildTaskPath)TunnelVisionLabs.ReferenceAssemblyAnnotator.dll" />

  <PropertyGroup>
    <ResolveAssemblyReferencesDependsOn>
      $(ResolveAssemblyReferencesDependsOn);
      AnnotateReferenceAssemblies;
      UpdateNetStandardAssemblies 
    </ResolveAssemblyReferencesDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <AnnotatedReferenceAssemblyDirectory Condition="'$(AnnotatedReferenceAssemblyDirectory)' == ''">$(NuGetPackageRoot)microsoft.netcore.app.ref\$(AnnotatedReferenceAssemblyVersion)\ref\netcoreapp3.0\</AnnotatedReferenceAssemblyDirectory>
  </PropertyGroup>

  <ItemGroup>
    <AnnotatedReferenceAssembly Include="$(AnnotatedReferenceAssemblyDirectory)*.dll" />
  </ItemGroup>

  <Target Name="ResolveAvailableReferenceAssemblies"
          DependsOnTargets="GetReferenceAssemblyPaths">
    <ItemGroup>
      <AvailableUnannotatedReferenceAssemblyDirectory Include="$(TargetFrameworkDirectory)" />
      <!-- Use an intermediate item group so AvailableUnannotatedReferenceAssembly contains the expanded glob -->
      <_AvailableUnannotatedReferenceAssembly Include="@(AvailableUnannotatedReferenceAssemblyDirectory->'%(Identity)*.dll')" />
      <AvailableUnannotatedReferenceAssembly Include="@(_AvailableUnannotatedReferenceAssemblyDirectory)" />
    </ItemGroup>
  </Target>

  <Target Name="ResolveOutputReferenceAssemblies">
    <PropertyGroup>
      <AnnotatedReferenceAssemblyOutputPath Condition="'$(AnnotatedReferenceAssemblyOutputPath)' == ''">$(IntermediateOutputPath)annotated\</AnnotatedReferenceAssemblyOutputPath>
    </PropertyGroup>
    <ItemGroup>
      <UnannotatedReferenceAssembly Update="@(UnannotatedReferenceAssembly)" OutputAssembly="$(AnnotatedReferenceAssemblyOutputPath)%(Identity).dll" />
    </ItemGroup>
  </Target>

  <Target Name="AnnotateReferenceAssemblies"
          DependsOnTargets="$(AnnotateReferenceAssembliesDependsOn)"
          Inputs="@(AvailableUnannotatedReferenceAssembly);@(AnnotatedReferenceAssembly)"
          Outputs="@(UnannotatedReferenceAssembly->'%(OutputAssembly)')">

    <AnnotatorBuildTask
      UnannotatedReferenceAssembly="%(UnannotatedReferenceAssembly.Identity)"
      TargetFrameworkDirectories="@(AvailableUnannotatedReferenceAssemblyDirectory)"
      AnnotatedReferenceAssemblyDirectory="$(AnnotatedReferenceAssemblyDirectory)"
      OutputPath="$(AnnotatedReferenceAssemblyOutputPath)">
      <Output ItemName="GeneratedReferenceAssemblies" TaskParameter="GeneratedAssemblies" />
    </AnnotatorBuildTask>

    <ItemGroup>
      <FileWrites Include="@(UnannotatedReferenceAssembly->'%(OutputAssembly)')" />
    </ItemGroup>

    <PropertyGroup>
      <!-- Add the annotated assembly directory as the first search path -->
      <TargetFrameworkDirectory>$([MSBuild]::NormalizeDirectory('$(AnnotatedReferenceAssemblyOutputPath)'));$(TargetFrameworkDirectory)</TargetFrameworkDirectory>
    </PropertyGroup>
  </Target>

  <Target Name="RestoreTargetFrameworkDirectory"
          Condition="'$(TargetFrameworkIdentifier)' == '.NETStandard'"
          BeforeTargets="ResolveAvailableReferenceAssemblies">
    <PropertyGroup>
      <TargetFrameworkDirectory>$(NuGetPackageRoot)netstandard.library\$(NETStandardLibraryPackageVersion)\build\netstandard2.0\ref\</TargetFrameworkDirectory>
    </PropertyGroup>
  </Target>

  <!-- Automatically annotate mscorlib on .NET Framework -->
  <Choose>
    <When Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
      <PropertyGroup>
        <NoStdLib>true</NoStdLib>
      </PropertyGroup>

      <ItemGroup>
        <Reference Include="mscorlib" />
      </ItemGroup>

      <ItemGroup>
        <UnannotatedReferenceAssembly Include="mscorlib" />
      </ItemGroup>
    </When>
  </Choose>

  <!-- Automatically annotate .NET Standard assemblies -->
  <Target Name="AddStandardAssembliesForAnnotation"
          BeforeTargets="ResolveOutputReferenceAssemblies">
      <ItemGroup>
        <UnannotatedReferenceAssembly Include="@(Reference->'%(FileName)')"
                                      Condition="'%(Reference.NuGetPackageId)' == 'NETStandard.Library' AND Exists('$(AnnotatedReferenceAssemblyDirectory)%(Reference.FileName)%(Reference.Extension)')"
                                      OriginalReference="%(Reference.Identity)"
                                      IsNetStandard="True" />
      </ItemGroup>
  </Target>

  <Target Name="UpdateNetStandardAssemblies"
          Condition="'$(TargetFrameworkIdentifier)' == '.NETStandard'"
          DependsOnTargets="AnnotateReferenceAssemblies">
    <ItemGroup>
      <Reference Remove="%(UnannotatedReferenceAssembly.OriginalReference)"
                 Condition="'%(UnannotatedReferenceAssembly.IsNetStandard)' == 'True' AND Exists('%(UnannotatedReferenceAssembly.OutputAssembly)')" />
      <Reference Include="@(UnannotatedReferenceAssembly->'%(OutputAssembly)')"
                 Condition="'%(UnannotatedReferenceAssembly.IsNetStandard)' == 'True' AND Exists('%(UnannotatedReferenceAssembly.OutputAssembly)')" />
    </ItemGroup>

    <PropertyGroup>
      <TargetFrameworkDirectory>$(NuGetPackageRoot)netstandard.library\$(NETStandardLibraryPackageVersion)\build\netstandard2.0\ref\</TargetFrameworkDirectory>
    </PropertyGroup>
  </Target>

</Project>
